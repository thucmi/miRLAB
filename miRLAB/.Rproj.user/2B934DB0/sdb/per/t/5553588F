{
    "collab_server" : "",
    "contents" : "\nR version 3.2.0 (2015-04-16) -- \"Full of Ingredients\"\nCopyright (C) 2015 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n> pkgname <- \"miRLAB\"\n> source(file.path(R.home(\"share\"), \"R\", \"examples-header.R\"))\n> options(warn = 1)\n> options(pager = \"console\")\n> base::assign(\".ExTimings\", \"miRLAB-Ex.timings\", pos = 'CheckExEnv')\n> base::cat(\"name\\tuser\\tsystem\\telapsed\\n\", file=base::get(\".ExTimings\", pos = 'CheckExEnv'))\n> base::assign(\".format_ptime\",\n+ function(x) {\n+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]\n+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]\n+   options(OutDec = '.')\n+   format(x[1L:3L], digits = 7L)\n+ },\n+ pos = 'CheckExEnv')\n> \n> ### * </HEADER>\n> library('miRLAB')\nLoading required package: RCurl\nLoading required package: bitops\nLoading required package: httr\nLoading required package: stringr\nLoading required package: Hmisc\nLoading required package: grid\nLoading required package: lattice\nLoading required package: survival\nLoading required package: Formula\nLoading required package: ggplot2\n\nAttaching package: 'Hmisc'\n\nThe following objects are masked from 'package:base':\n\n    format.pval, round.POSIXt, trunc.POSIXt, units\n\nLoading required package: Roleswitch\nLoading required package: pracma\n\nAttaching package: 'pracma'\n\nThe following object is masked from 'package:Hmisc':\n\n    ceil\n\nLoading required package: reshape\nLoading required package: plotrix\nLoading required package: microRNA\nLoading required package: biomaRt\nLoading required package: Biostrings\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: 'BiocGenerics'\n\nThe following objects are masked from 'package:parallel':\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following object is masked from 'package:Hmisc':\n\n    combine\n\nThe following object is masked from 'package:stats':\n\n    xtabs\n\nThe following objects are masked from 'package:base':\n\n    Filter, Find, Map, Position, Reduce, anyDuplicated, append,\n    as.data.frame, as.vector, cbind, colnames, do.call, duplicated,\n    eval, evalq, get, intersect, is.unsorted, lapply, mapply, match,\n    mget, order, paste, pmax, pmax.int, pmin, pmin.int, rank, rbind,\n    rep.int, rownames, sapply, setdiff, sort, table, tapply, union,\n    unique, unlist, unsplit\n\nLoading required package: S4Vectors\nLoading required package: stats4\n\nAttaching package: 'S4Vectors'\n\nThe following object is masked from 'package:reshape':\n\n    rename\n\nLoading required package: IRanges\n\nAttaching package: 'IRanges'\n\nThe following object is masked from 'package:reshape':\n\n    expand\n\nLoading required package: XVector\n\nAttaching package: 'Biostrings'\n\nThe following objects are masked from 'package:Hmisc':\n\n    mask, translate\n\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: 'Biobase'\n\nThe following object is masked from 'package:Hmisc':\n\n    contents\n\nThe following object is masked from 'package:httr':\n\n    content\n\nLoading required package: DBI\nLoading required package: energy\nLoading required package: entropy\nLoading required package: ghyp\nLoading required package: numDeriv\n\nAttaching package: 'numDeriv'\n\nThe following objects are masked from 'package:pracma':\n\n    grad, hessian, jacobian\n\nLoading required package: gplots\n\nAttaching package: 'gplots'\n\nThe following object is masked from 'package:IRanges':\n\n    space\n\nThe following object is masked from 'package:plotrix':\n\n    plotCI\n\nThe following object is masked from 'package:stats':\n\n    lowess\n\nLoading required package: glmnet\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following object is masked from 'package:IRanges':\n\n    expand\n\nThe following object is masked from 'package:reshape':\n\n    expand\n\nThe following objects are masked from 'package:pracma':\n\n    expm, lu, tril, triu\n\nLoading required package: foreach\nLoaded glmnet 2.0-2\n\nLoading required package: impute\nLoading required package: limma\n\nAttaching package: 'limma'\n\nThe following object is masked from 'package:BiocGenerics':\n\n    plotMA\n\nLoading required package: pcalg\n\nAttaching package: 'pcalg'\n\nThe following object is masked from 'package:S4Vectors':\n\n    pc\n\nLoading required package: org.Hs.eg.db\nLoading required package: AnnotationDbi\nLoading required package: GenomeInfoDb\n\nLoading required package: GSEABase\nLoading required package: annotate\nLoading required package: XML\nLoading required package: graph\n\nAttaching package: 'graph'\n\nThe following object is masked from 'package:XML':\n\n    addNode\n\nThe following object is masked from 'package:Biostrings':\n\n    complement\n\nThe following object is masked from 'package:stringr':\n\n    boundary\n\nLoading required package: GOstats\nLoading required package: Category\nLoading required package: GO.db\n\n\nAttaching package: 'GOstats'\n\nThe following object is masked from 'package:AnnotationDbi':\n\n    makeGOGraph\n\n> \n> base::assign(\".oldSearch\", base::search(), pos = 'CheckExEnv')\n> cleanEx()\n> nameEx(\"Borda\")\n> ### * Borda\n> \n> flush(stderr()); flush(stdout())\n> \n> base::assign(\".ptime\", proc.time(), pos = \"CheckExEnv\")\n> ### Name: Borda\n> ### Title: Ensemble method for miRNA target prediction using Borda count\n> ###   election\n> ### Aliases: Borda\n> \n> ### ** Examples\n> \n> ps=Pearson(\"./inst/extdata/EMT35.csv\", cause=1:35, effect=36:1189)\nWarning in file(file, \"rt\") :\n  cannot open file './inst/extdata/EMT35.csv': No such file or directory\nError in file(file, \"rt\") : cannot open the connection\nCalls: Pearson -> Read -> read.csv -> read.table -> file\nExecution halted\n",
    "created" : 1430459299043.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3172133404",
    "id" : "5553588F",
    "lastKnownWriteTime" : 1430455798,
    "last_content_update" : 0,
    "path" : "D:/Dropbox-letd/Dropbox/PROJECTS-WORKING/miRLAB-APPLICATION-NOTE/Project/miRLAB.Rcheck/miRLAB-Ex.Rout",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 0,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "text"
}